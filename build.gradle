plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group = 'gg.mew.plugins'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    maven {url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

shadowJar {
    relocate 'co.aikar.commands', 'gg.mew.plugins.slabbomaps.acf'
    relocate 'co.aikar.locales', 'gg.mew.plugins.slabbomaps.locales'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

//    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    options.compilerArgs += ["-parameters"]

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
